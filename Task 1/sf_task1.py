# -*- coding: utf-8 -*-
"""SF_Task1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1999dUrgDqJSIdD8uKaBIzVCcGSwBDbDU
"""
 **GRIP @ The Sparks Foundation**

# **Author- Rahemeen Khan**
GRIPMAY23

from google.colab import drive
drive.mount('/content/gdrive')

"""**Import Dataset**"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
df = pd.read_csv("/content/gdrive/MyDrive/Dataset/Dataset_task1.csv")
df.head()

"""**Visualizaing Regression Line**"""

#plot Regression line
line = regressor.coef_*X+regressor.intercept_
 
plt.scatter(X,y, color='red') 
plt.plot(X, line, color='blue') # plotting the regression line
 
plt.title("Hours vs Score (Testing set)")
plt.xlabel("Number of Hours") 
plt.ylabel("Salary") 
plt.show()

"""**Dependent & Independent Variable**"""

X = df.iloc[:,:-1].values  #independent variable array
y = df.iloc[:,1].values  #dependent variable vector

"""**Splitting dataset into ratios**"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=32)

"""**Linear Regression Model**"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train,y_train) #actually produces the linear eqn for the data

"""**Prediction**"""

y_pred = regressor.predict(X_test) 
values= pd.DataFrame({"Predicted" : y_pred , "Actual" : y_test})
values

# Predicted Score if a student studies for 9.25 hr/day
task_predict = regressor.predict([[9.25]])
print("No of Hours = {}".format(9.25))
print("Predicted Score = {}".format(task_predict[0]))

"""**Model Evaluation**"""

from sklearn import metrics  
print('Mean Absolute Error:', 
      metrics.mean_absolute_error(y_test, y_pred))
